# Coded by BlackMesa @QuasarKernel/J55
assert(is_substring("J500F", getprop("ro.boot.bootloader")) || is_substring("J500H", getprop("ro.boot.bootloader")) || is_substring("J500G", getprop("ro.boot.bootloader")) || is_substring("J500Y", getprop("ro.boot.bootloader")) || is_substring("J500M", getprop("ro.boot.bootloader")) ||
  abort("The following kernel isn't compatible with your device. Aborting..."););
#
set_progress(0.0);
#
ui_print("======================================");
ui_print("Quasar Kernel QSVER");
ui_print("by BlackMesa @XDA developers");
ui_print("======================================");
#
ui_print("-Mounting Partitions...");
ifelse(is_mounted("/system"), unmount("/system"));
ifelse(is_mounted("/cache"), unmount("/cache"));
mount("ext4", "EMMC", "/dev/block/bootdevice/by-name/system", "/system");
mount("ext4", "EMMC", "/dev/block/bootdevice/by-name/cache", "/cache");
#
ui_print("-Wiping Cache...");
delete_recursive("/cache");
#
set_progress(0.15);
#
if is_substring("J500H", getprop("ro.boot.bootloader")) then
	ui_print("-Flashing j53g Kernel...");
	package_extract_file("quasar/j53g/boot.img", "/dev/block/bootdevice/by-name/boot");
endif;
#
if is_substring("J500F", getprop("ro.boot.bootloader")) || is_substring("J500M", getprop("ro.boot.bootloader")) || is_substring("J500G", getprop("ro.boot.bootloader")) then
	ui_print("-Flashing j5lte Kernel...");
	package_extract_file("quasar/j5lte/boot.img", "/dev/block/bootdevice/by-name/boot");
endif;
#
if is_substring("J500FN", getprop("ro.boot.bootloader")) then
	ui_print("-Flashing j5nlte Kernel...");
	package_extract_file("quasar/j5nlte/boot.img", "/dev/block/bootdevice/by-name/boot");
endif;
#
if is_substring("J500Y", getprop("ro.boot.bootloader")) then
	ui_print("-Flashing j5ylte Kernel...");
	package_extract_file("quasar/j5ylte/boot.img", "/dev/block/bootdevice/by-name/boot");
endif;
#
set_progress(0.50);
#
ui_print("-Flashing Pronto Wlan Drivers...");
package_extract_file("quasar/pronto", "/system/lib/modules/pronto/pronto_wlan.ko");
package_extract_file("quasar/wpsw", "/system/vendor/lib/libsecure_storage.so");
#
set_progress(0.80);
#
ui_print("-Unmounting Partitions...");
ifelse(is_mounted("/system"), unmount("/system"));
ifelse(is_mounted("/cache"), unmount("/cache"));
#
set_progress(1.000000);
#
#
ui_print("======================================");
ui_print("Done! Enjoy :D");
ui_print("======================================");
